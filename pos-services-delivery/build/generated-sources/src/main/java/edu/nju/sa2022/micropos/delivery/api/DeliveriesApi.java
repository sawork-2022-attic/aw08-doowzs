/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.3.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package edu.nju.sa2022.micropos.delivery.api;

import edu.nju.sa2022.micropos.delivery.dto.DeliveryDto;
import edu.nju.sa2022.micropos.delivery.dto.ErrorDto;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2022-05-09T16:50:10.605550+08:00[Asia/Shanghai]")
@Validated
@Api(value = "deliveries", description = "the deliveries API")
public interface DeliveriesApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /deliveries/{deliveryId} : Get Delivery
     *
     * @param deliveryId The id of the delivery to retrieve (required)
     * @return Expected response to a valid request (status code 200)
     *         or unexpected error (status code 200)
     */
    @ApiOperation(value = "Get Delivery", nickname = "findDelivery", notes = "", response = DeliveryDto.class, tags={ "Deliveries", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Expected response to a valid request", response = DeliveryDto.class),
        @ApiResponse(code = 200, message = "unexpected error", response = ErrorDto.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/deliveries/{deliveryId}",
        produces = { "application/json" }
    )
    default ResponseEntity<DeliveryDto> findDelivery(@ApiParam(value = "The id of the delivery to retrieve", required = true) @PathVariable("deliveryId") String deliveryId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"orderId\" : \"orderId\", \"delivered\" : true, \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /deliveries : List deliveries
     *
     * @param orderId The id of the order to query (required)
     * @return Expected response to a valid request (status code 200)
     *         or unexpected error (status code 200)
     */
    @ApiOperation(value = "List deliveries", nickname = "listDeliveriesByOrderId", notes = "", response = DeliveryDto.class, responseContainer = "List", tags={ "Deliveries", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Expected response to a valid request", response = DeliveryDto.class, responseContainer = "List"),
        @ApiResponse(code = 200, message = "unexpected error", response = ErrorDto.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/deliveries",
        produces = { "application/json" }
    )
    default ResponseEntity<List<DeliveryDto>> listDeliveriesByOrderId(@NotNull @ApiParam(value = "The id of the order to query", required = true) @Valid @RequestParam(value = "orderId", required = true) String orderId) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"orderId\" : \"orderId\", \"delivered\" : true, \"id\" : \"id\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
